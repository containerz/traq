#!/bin/bash
#
# traq
# simple time tracking using files, organized by calendar week
#
# example usage:
# `traq foo`:
#    creates an entry for #foo at todays date, e.g. `Mon Jul 30 08:35:42 CEST 2012 #foo`
#    the corresponding file resides at ~/.traq/timestamps/kw-31/timestamps-2012-07-30
# `traq stop`:
#    appends the special stop delimitor to todays file, e.g. `Mon Jul 30 08:35:42 CEST 2012 stop`
# `traq`:
#    echo the content of todays file to stdout. If the file does not exist, nothing is echoed.
# `traq -d 2012-07-30`:
#    echo the content of the file from the given date to stdout. If the file does not exist, nothing is echoed.
# `traq -w 31`:
#    echo the content of all files from the calendar week 31 to stdout. If the week does not contain files, nothing is echoed.
# optional you can pass -g to all examples, which will cause the file to be placed at
# at ~/.traq/<group>/kw-31/timestamps-2012-07-30
#

set +e

TRAQ_PATH="$HOME/.traq/"

# # make sure we have a week directory
# mkdir -p $WEEK_DIRECTORY

function traq() {
  # return kw-<week>/timestamps-<current date>
  function today_file() {
    local WEEK_NUMBER=`date +%V`
    if [ -z "$DATE" ]; then
      DATE=`date +"%Y-%m-%d"`
    else
      if [ "$DATE" != "*" ]; then
        WEEK_NUMBER=`date -j -f "%Y-%m-%d" "$DATE" "+%V"`
      fi
    fi

    if [ ! -z $WEEK ]; then
      WEEK_NUMBER=$WEEK
      DATE="*"
    fi

    printf "kw-$WEEK_NUMBER/timestamps-$DATE"
  }

  # returns the current traq file, taking -p option into account, if any.

  # echo only if verbose is enabled
  function verboselog() {
    if [ ! -z $VERBOSE ]
    then
      printf "$@\n"
    fi
  }

  # output the current date like this: 'Sun Sep 23 11:28:02 +0400 2012'
  function traqdate() {
    printf "$(date +"%a %b %d %H:%M:%S %z %Y")"
  }

  # generate the correct tag for a given tag
  function traqtag() {
    if [ "$@" == "stop" ]
    then
      printf "stop\n"
    else
      printf "#$@\n"
    fi
  }

  local TAG=$1

  local TRAQFILE="$HOME/.traq/$PROJECT/$(today_file)"

  # echo $TRAQFILE
  if [ -z $TAG ]; then # no tag was given; output the content
    if [ -e "$TRAQFILE" -o "$DATE" = "*" ]; then
      for FILE in $TRAQFILE; do
        cat $FILE
        printf "%%%%\n"
      done
    else
      printf "$TRAQFILE does not exist.\n" 1>&2
    fi
  else # tag was given; handle tag
    if [ -z "$WEEK" -a -z "$DATE" ]; then
      mkdir -p $(dirname $TRAQFILE)
      printf "$(traqdate);$(traqtag $TAG)\n" >> $TRAQFILE
    else
      printf "can not combine -d or -w with a tag\n" 1>&2
    fi
  fi
}

PROJECT="timestamps"
VERBOSE=
DATE=
WEEK=
while getopts ":p:d:w::v" opt "$@"
do
  case $opt in
    p)
      PROJECT="$OPTARG"
      ;;
    v)
      VERBOSE=yes
      ;;
    d)
      DATE="$OPTARG"
      ;;
    w)
      WEEK="$OPTARG"
      DATE="*"
      ;;
    \?)
      printf "Invalid option: -$OPTARG\n" >&2
      ;;
    :)
      printf "Option -$OPTARG requires an argument.\n" >&2
      exit 1
      ;;
  esac
done
shift $(($OPTIND - 1))

traq "$@"