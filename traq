#!/bin/bash
#
# traq
# simple time tracking using files, organized by calendar week
#
# example usage:
# `traq foo`:
#    creates an entry for #foo at todays date, e.g. `Mon Jul 30 08:35:42 CEST 2012 #foo`
#    the corresponding file resides at ~/.traq/timestamps/kw-31/timestamps-2012-07-30
# `traq stop`:
#    appends the special stop delimitor to todays file, e.g. `Mon Jul 30 08:35:42 CEST 2012 stop`
# `traq`:
#    echo the content of todays file to stdout. If the file does not exist, nothing is echoed.
# `traq -d 2012-07-30`:
#    echo the content of the file from the given date to stdout. If the file does not exist, nothing is echoed.
# `traq -w 31`:
#    echo the content of all files from the calendar week 31 to stdout. If the week does not contain files, nothing is echoed.
# optional you can pass -g to all examples, which will cause the file to be placed at
# at ~/.traq/<group>/kw-31/timestamps-2012-07-30
#

set +e

TRAQ_PATH="$HOME/.traq/"
. $TRAQ_PATH/traq/traq_helper.sh

PROJECT="timestamps"
VERBOSE=
DATE=
WEEK=
while getopts ":p:d:w::v" opt "$@"
do
  case $opt in
    p)
      PROJECT="$OPTARG"
      ;;
    v)
      VERBOSE=yes
      ;;
    d)
      DATE="$OPTARG"
      ;;
    w)
      WEEK="$OPTARG"
      ;;
    \?)
      printf "Invalid option: -$OPTARG\n" >&2
      ;;
    :)
      printf "Option -$OPTARG requires an argument.\n" >&2
      exit 1
      ;;
  esac
done
shift $(($OPTIND - 1))

TAG=$@
traq "$TAG" "$DATE" "$WEEK" "$PROJECT"