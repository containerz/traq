#!/usr/bin/env ruby
# calculate total hours worked from a transformed traq file
# it is important to pipe traq output/ file through traqtrans first

require 'readline'
require 'time'

def eval_day lines
  totalled = Hash.new

  current_tag = nil
  started_at = nil

  lines.each do |line|
    next if line =~ /^\s*$/
    next if line =~ /^%+$/

    (timestamp, tag) = line.split(';')

    next unless tag && timestamp

    if (current_tag == nil)
      current_tag = tag
      started_at = timestamp
      ended_at = nil
    else
      ended_at = timestamp
      diff = ended_at.to_i - started_at.to_i

      totalled[current_tag] ||= 0
      totalled[current_tag] += diff

      current_tag = nil
      current_tag = tag

      started_at = timestamp
    end
  end

  STDOUT << Time.strptime(started_at, "%s").strftime("%Y-%m-%d") << "\n"
  totalled.each do |(key, timespan)|
    next if key.strip == 'stop'
    STDOUT << "#{key.strip}:#{(timespan.to_f / 60.0 / 60.0)}\n"
  end
  STDOUT << "%%\n"
end

def eval lines
  day_lines = []
  lines.each do |line|
    if line =~ /^%*$/
      eval_day day_lines
      day_lines = []
    else
      day_lines << line
    end
  end
end

if ARGV.count < 1
  eval STDIN
else
  ARGV.each do |f|
    eval IO.readlines(f)
  end
end